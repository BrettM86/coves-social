{
  "lexicon": 1,
  "id": "social.coves.post.image",
  "defs": {
    "main": {
      "type": "record",
      "description": "An image post",
      "key": "tid",
      "record": {
        "type": "object",
        "required": ["community", "title", "images", "createdAt"],
        "properties": {
          "community": {
            "type": "string",
            "format": "at-identifier",
            "description": "DID or handle of the community this was posted to"
          },
          "title": {
            "type": "string",
            "maxGraphemes": 300,
            "maxLength": 3000,
            "description": "Post title"
          },
          "images": {
            "type": "array",
            "minLength": 1,
            "maxLength": 10,
            "description": "Images in the post",
            "items": {
              "type": "ref",
              "ref": "social.coves.embed.image"
            }
          },
          "caption": {
            "type": "string",
            "maxLength": 10000,
            "description": "Optional caption or description"
          },
          "captionFacets": {
            "type": "array",
            "description": "Rich text annotations for caption",
            "items": {
              "type": "ref",
              "ref": "social.coves.richtext.facet"
            }
          },
          "tags": {
            "type": "array",
            "maxLength": 10,
            "items": {
              "type": "string",
              "maxLength": 32
            }
          },
          "contentLabels": {
            "type": "array",
            "description": "Self-applied content labels",
            "items": {
              "type": "string",
              "knownValues": ["nsfw", "spoiler", "violence"],
              "maxLength": 32
            }
          },
          "federatedFrom": {
            "type": "ref",
            "ref": "social.coves.federation.post"
          },
          "location": {
            "type": "ref",
            "ref": "social.coves.actor.profile#geoLocation"
          },
          "crosspostOf": {
            "type": "string",
            "format": "at-uri",
            "description": "If this is a crosspost, AT-URI of the post this is a crosspost of"
          },
          "crosspostChain": {
            "type": "array",
            "description": "Array of AT-URIs of all posts in the crosspost chain (including this one)",
            "items": {
              "type": "string",
              "format": "at-uri"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "datetime"
          }
        }
      }
    }
  }
}