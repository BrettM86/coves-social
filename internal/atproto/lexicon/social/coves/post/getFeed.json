{
  "lexicon": 1,
  "id": "social.coves.post.getFeed",
  "defs": {
    "main": {
      "type": "query",
      "description": "Get a feed of posts. Use 'feed' parameter for global feeds (home/all) or 'community' + 'sort' for community-specific feeds. These modes are mutually exclusive.",
      "parameters": {
        "type": "params",
        "properties": {
          "feed": {
            "type": "string",
            "enum": ["home", "all"],
            "default": "home",
            "description": "Type of global feed to retrieve (mutually exclusive with community parameter)"
          },
          "community": {
            "type": "string",
            "format": "at-identifier",
            "description": "Get community feed for specific community (DID or handle, mutually exclusive with feed parameter)"
          },
          "sort": {
            "type": "string",
            "enum": ["hot", "top", "new"],
            "default": "hot",
            "description": "Sort order for community feeds (required when community is specified, ignored for global feeds)"
          },
          "postType": {
            "type": "string",
            "enum": ["text", "article", "image", "video", "microblog"],
            "description": "Filter by a single post type"
          },
          "postTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["text", "article", "image", "video", "microblog"]
            },
            "description": "Filter by multiple post types"
          },
          "timeframe": {
            "type": "string",
            "enum": ["hour", "day", "week", "month", "year", "all"],
            "default": "day",
            "description": "Timeframe for top sorting (only applies when sort=top)"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 50,
            "default": 15
          },
          "cursor": {
            "type": "string"
          }
        }
      },
      "output": {
        "encoding": "application/json",
        "schema": {
          "type": "object",
          "required": ["posts"],
          "properties": {
            "posts": {
              "type": "array",
              "items": {
                "type": "ref",
                "ref": "#feedPost"
              }
            },
            "cursor": {
              "type": "string"
            }
          }
        }
      }
    },
    "feedPost": {
      "type": "object",
      "required": ["uri", "author", "community", "postType", "createdAt"],
      "properties": {
        "uri": {
          "type": "string",
          "format": "at-uri"
        },
        "author": {
          "type": "ref",
          "ref": "social.coves.post.get#authorView"
        },
        "community": {
          "type": "ref",
          "ref": "social.coves.post.get#communityRef"
        },
        "postType": {
          "type": "string",
          "enum": ["text", "article", "image", "video", "microblog"],
          "description": "Type of the post for UI rendering"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string",
          "maxLength": 500,
          "description": "Truncated preview of the post content"
        },
        "embed": {
          "type": "union",
          "description": "Embedded content preview",
          "refs": [
            "social.coves.post.get#imagesView",
            "social.coves.post.get#videoView",
            "social.coves.post.get#externalView",
            "social.coves.post.get#postView"
          ]
        },
        "originalAuthor": {
          "type": "ref",
          "ref": "social.coves.post.record#originalAuthor",
          "description": "For microblog posts - original author info"
        },
        "contentLabels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "datetime"
        },
        "stats": {
          "type": "ref",
          "ref": "social.coves.post.get#postStats"
        },
        "viewer": {
          "type": "ref",
          "ref": "social.coves.post.get#viewerState"
        }
      }
    }
  }
}